{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "src",
  "sources": [
    "../main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "'use strict'\n\n# Get common adapter utils\nutils = require(\"#{__dirname}/lib/utils\")\n\n# Create Adapter instance\nadapter = (new utils.Adapter('keyble'))\n\n# Get keyble module\nkeyble = require('keyble')\n\n# Reference to the device\nkey_ble = null\n\n# Called when the instance should be initialized\nadapter.on 'ready', ->\n\tadapter.log.info \"Initializing instance using configuration: #{JSON.stringify(adapter.config)}\"\n\tinitialize()\n\treturn\n\n# Called if a subscribed state changes\nadapter.on 'stateChange', (long_id, state) ->\n\t# Warning, state can be null if it was deleted\n\tadapter.log.info \"stateChange #{id}: #{JSON.stringify(state)}\"\n\t# you can use the ack flag to detect if it is status (true) or command (false)\n\tif (state and (not state.ack))\n\t\tid = long_id.slice(adapter.namespace.length + 1)\n\t\ton_command_state(id, state, state.val, long_id)\n\treturn\n\n# Called when the instance shall be terminated\n# Callback has to be called under any circumstances!\nadapter.on 'unload', (callback) ->\n\tadapter.log.info \"Terminating instance, cleaning up...\"\n\tPromise.resolve(terminate())\n\t.then ->\n\t\tadapter.log.info \"Successfully cleaned up.\"\n\t\tcallback()\n\t\treturn\n\t.catch (error) ->\n\t\tadapter.log.info \"Error cleaning up!\"\n\t\tcallback()\n\t\treturn\n\treturn\n\ninitialize = ->\n\tkey_ble = new keyble.Key_Ble\n\t\taddress: adapter.config.mac_address\n\t\tuser_id: adapter.config.user_id\n\t\tuser_key: adapter.config.user_key\n\t\tauto_disconnect_time: adapter.config.auto_disconnect_time\n\t\tstatus_update_time: adapter.config.status_update_time\n\tkey_ble.on 'status_change', (status_id, status_string) ->\n\t\tadapter.setState 'active',\n\t\t\tval: (status_id is 1)\n\t\t\tack: true\n\t\tadapter.setState 'lock_state',\n\t\t\tval: status_id\n\t\t\tack: true\n\t\tif (status_id isnt 1)\n\t\t\t# Lock is not active\n\t\t\tadapter.setState 'opened',\n\t\t\t\tval: (status_id is 4)\n\t\t\t\tack: true\n\t\t\tadapter.setState 'unlocked',\n\t\t\t\tval: ((status_id is 2) or (status_id is 4))\n\t\t\t\tack: true\n\n\t# For every state in the system there has to be also an object of type state\n\t# Here a simple keyble for a boolean variable named \"testVariable\"\n\t# Because every adapter instance uses its own unique namespace variable names can't collide with other adapters variables\n\tadapter.setObjectNotExists 'unlocked',\n\t\ttype: 'state'\n\t\tcommon:\n\t\t\tname: 'unlocked'\n\t\t\ttype: 'boolean'\n\t\t\trole: 'switch.lock.door'\n\t\t\twrite: true\n\t\tnative: {}\n\n\tadapter.setObjectNotExists 'active',\n\t\ttype: 'state'\n\t\tcommon:\n\t\t\tname: 'active'\n\t\t\ttype: 'boolean'\n\t\t\trole: 'indicator.working'\n\t\t\twrite: false\n\t\tnative: {}\n\n\tadapter.setObjectNotExists 'opened',\n\t\ttype: 'state'\n\t\tcommon:\n\t\t\tname: 'opened'\n\t\t\ttype: 'boolean'\n\t\t\trole: 'switch.lock.door'\n\t\t\twrite: true\n\t\tnative: {}\n\n\tadapter.setObjectNotExists 'lock_state',\n\t\ttype: 'state'\n\t\tcommon:\n\t\t\tname: 'lock_state'\n\t\t\ttype: 'number'\n\t\t\trole: 'value.lock'\n\t\t\twrite: false\n\t\t\tstates:\n\t\t\t\t0: 'LOCKED'\n\t\t\t\t1: 'ACTIVE'\n\t\t\t\t2: 'UNLOCKED'\n\t\t\t\t4: 'OPEN'\n\t\tnative: {}\n\n\n\t# in this keyble all states changes inside the adapters namespace are subscribed\n\tadapter.subscribeStates '*'\n\n\treturn\n\non_command_state = (id, state, value, long_id) ->\n\tswitch id\n\t\twhen 'unlocked'\n\t\t\tif value\n\t\t\t\tkey_ble.unlock()\n\t\t\telse\n\t\t\t\tkey_ble.lock()\n\t\twhen 'opened'\n\t\t\tif value\n\t\t\t\tkey_ble.open()\n\treturn\n\nterminate = ->\n\tkey_ble.disconnect()\n\tkey_ble = null\n\n"
  ]
}